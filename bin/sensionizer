#!/usr/bin/env zsh
#
# Another tmux session manager. Adapted from ThePrimeagen's script.
#
# Authors:
#   Augusto Elesb√£o <aelesbao@users.noreply.github.com>
#

set -e

if ! (( \
       (( ${+commands[eza]} )) \
    && (( ${+commands[fd]} )) \
    && (( ${+commands[fzf-tmux]} )) \
    && (( ${+commands[zoxide]} )) \
  )); then
  echo "Required dependencies not found. Please install fd, fzf, and zoxide" >&2
  exit 1
fi

# Maximum depth to search for projects in the workspaces
typeset -i max_depth=2

# Defines global workspaces to be included in the project search paths
typeset -U workspaces

# Defines preferred session names for specific project folders
typeset -A session_names

# Adds session name overrides for specific projects
function add-session-name() {
  local name=$1
  local -a paths=(${argv[@]:2})

  for p in ${~paths}; do
    session_names[$p]=$name
  done
}

function get-tmux-config-dir {
  local tmux_config_xdg="${XDG_CONFIG_HOME:-$HOME/.config}/tmux/tmux.conf"

  if [ -f "${tmux_config_xdg}" ]; then
    echo "${tmux_config_xdg:h}"
  else
    echo "$HOME"
  fi
}

function load-config {
  local config_file="$(get-tmux-config-dir)/sensionizer.config.zsh"
  [[ -f "${config_file}" ]] && source "$config_file"
}

# Fuzzy find on all git projects
function fzf-projects {
  local -a projects=($(fd --max-depth $max_depth -H -g '.git' ${^workspaces}))
  local -A scores=($(zoxide query -sl | awk -F' ' '{ print $2 " " $1 }'))
  local -a result=()

  # Construct the result array by removing duplicates, cleaning the
  # trailing `.git` from the flder name, associating zoxide's path score,
  # and replacing $HOME with ~
  for project in ${(u)projects}; do
    project=${project:h}
    score=${scores[$project]:-'0.0'}
    result+=("$score:$project:${(D)project}")
  done

  # Sorts the result in numerical descending order
  result=(${(nO)result})

  preview_cmd='echo {2} | cut -d ":" -f1 | \
    eza -1h --color=always --icons=always --no-quotes \
    --group-directories-first --stdin'

  echo "${(F)result}" | fzf-tmux -p --ansi \
    --scheme=path \
    --tiebreak=index \
    --delimiter=: --with-nth=3 \
    --preview="$preview_cmd" \
    --preview-window='30%' \
    --border-label='Choose the project to open a tmux session'
}

function build-session-name {
  local session_dir="$1"

  if [[ -v session_names[$session_dir] ]]; then
    echo "$session_names[$session_dir]"
  else
    echo "${session_dir:t2}" | \
      tr . - | tr ' ' - | tr ':' - | tr '[:upper:]' '[:lower:]'
  fi
}

function main {
  load-config

  local session_dir="$1"

  if ! [[ -d "$session_dir" ]]; then
    local selected="$(fzf-projects)"
    [[ -n "$selected" ]] || return 0

    session_dir=$(echo "$selected" | cut -d ':' -f2)
  fi

  local session_name="$(build-session-name "$session_dir")"

  # Increment the directory's rank
  zoxide add "$session_dir"

  # If tmux is not running, create the session at target directory
  if [[ -z "$TMUX" ]] && [[ -z "$(pgrep tmux)" ]]; then
    tmux new-session -s "$session_name" -c "$session_dir"
    return
  fi

  # If tmux is running but the session doesn't exists,
  # create it at the target directory
  if ! tmux has-session -t "$session_name" 2> /dev/null; then
    tmux new-session -ds "$session_name" -c "$session_dir"
  fi

  # switch to the session
  tmux switch-client -t "$session_name"
}

main "$@"

# vim:ft=zsh
