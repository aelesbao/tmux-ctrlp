#!/usr/bin/env zsh

set -e -o extendedglob

if ! (( \
       (( ${+commands[eza]} )) \
    && (( ${+commands[fd]} )) \
    && (( ${+commands[fzf-tmux]} )) \
    && (( ${+commands[zoxide]} )) \
  )); then
  echo "Required dependencies not found. Please install eza, fd, fzf, and zoxide" >&2
  exit 1
fi

local script_dir=${~0:A:h}

source $script_dir/../lib/config.zsh

# Scans the workspaces for git repositories and
# cleans the trailing .git from the folder name.
function find-repos() {
  local -U repos=($(fd --max-depth $max_depth -H -g '.git' ${^workspaces}))
  echo ${repos%/\.git(/)#}
}

function search-paths() {
  local -U search_paths=()
  search_paths+=(${projects[@]})
  search_paths+=($(find-repos))
  echo ${search_paths[@]}
}

# Fuzzy find on all projects.
function fzf-projects {
  local -A scores=($(zoxide query -sl | awk -F' ' '{ print $2 " " $1 }'))
  local -a result=()

  # Construct the result array, associating zoxide's path score,
  # and replacing $HOME with ~
  for project in $(search-paths); do
    score=${scores[$project]:-'0.0'}
    result+=("$score:$project:${(D)project}")
  done

  # Sorts the result in numerical descending order
  result=(${(nO)result})

  preview_cmd='echo {2} | cut -d ":" -f1 | \
    eza -1h --color=always --icons=always --no-quotes \
    --group-directories-first --stdin'

  echo "${(F)result}" | fzf-tmux -p --ansi \
    --scheme=path \
    --tiebreak=index \
    --delimiter=: --with-nth=3 \
    --preview="$preview_cmd" \
    --preview-window='30%' \
    --border-label='Choose the project to open a tmux session'
}

function build-session-name {
  local target_dir="$1"

  if [[ -v session_names[$target_dir] ]]; then
    echo "$session_names[$target_dir]"
  else
    echo "${target_dir:t2}" | \
      tr . - | tr ' ' - | tr ':' - | tr '[:upper:]' '[:lower:]'
  fi
}

function main {
  load-config

  local target_dir="$1"

  if ! [[ -d "$target_dir" ]]; then
    local selected="$(fzf-projects)"
    target_dir=$(echo "$selected" | cut -d ':' -f2)
    [[ -d "$target_dir" ]] || return 0
  fi

  local session="$(build-session-name "$target_dir")"

  # Increment the directory's rank
  zoxide add "$target_dir"

  # If tmux is not running, create the session at target directory
  if [[ -z "$TMUX" ]] && [[ -z "$(pgrep tmux)" ]]; then
    tmux new-session -s "$session" -c "$target_dir"
    return
  fi

  # If tmux is running but the session doesn't exists,
  # create it at the target directory
  if ! tmux has-session -t "$session" 2> /dev/null; then
    tmux new-session -ds "$session" -c "$target_dir"
  fi

  # Check if the target has a pane in the selected directory.
  # Otherwise, open a new window on it.
  pane_paths=($(tmux list-panes -s -t "$session" -F '#{pane_current_path}'))
  if ! (( $pane_paths[(I)$target_dir] )); then
    tmux new-window -t "${session}:" -c "$target_dir"
  fi

  # Switch or attach to the session
  if [ -z "$TMUX" ]; then
    tmux attach -t "$session"
  else
    tmux switch-client -t "$session"
  fi
}

main "$@"

# vim:ft=zsh
